1차원 배열의 값들 중 최댓값 구하기

#include<stdio.h>
#include <stdlib.h>
#include <time.h>
int main(void)

{
    srand(time(NULL));   // 난수 생성을 위함
    int arr[10];
    int random = 0;
    int max = 0;        // 가장 큰 값을 저장할 변수

    for(int i=0; i<10 ; i++)        // 배열에 무작위 값 채우기
    {
        arr[i] = rand()%100+1;      // 1~100까지의 랜덤 함수 설정
    }
    for(int i=0; i<10; i++)
    {
        if(max<arr[i])
            max = arr[i];
    }
    printf("배열의 최댓값: %d \n",max);

    return 0;
}

///////////////////////////////////////////////////////////////////////////////

배열 요소 중 최댓값 반환하는 함수
#include<stdio.h>
#include <stdlib.h>
#include <time.h>

double Max(double* arr, int n2)
{
    srand(time(NULL)); 
    double random = 0;
    double max = arr[0];
    for(int i=0; i<10 ; i++)       
    {
        arr[i] = rand()%100+1; 
    }
    
    for (int i=0; i<n2 ; i++)
    {
        if(max<arr[i])
            max=arr[i];
    }
    return max;
}
int main(void)
{
    double arr[10];
    int n2 = sizeof(arr) / sizeof(double);

    double max = Max(arr,n2);
    printf("%f \n", max);

    return 0;
}

//////////////////////////////////////////////////////////////////////////

// 배열값을 크기 순으로 정렬하기
#include<stdio.h>
#include<stdlib.h>
#include<time.h>

void Sort(int ary[], int len);

int main(void)
{
    srand(time(NULL));
    int arr[10];

    for(int i=0;i<10; i++)
    {
        arr[i] = rand()% 100 + 1;
    }
    Sort(arr, sizeof(arr) / sizeof(int));

    for(int i=0; i<10;i++)
    {
        printf("%d \n", arr[i]);
    }
    
    return 0;
}
void Sort(int ary[], int len)
{
    int temp= 0 ;
    for(int i=0;i<len-1;i++)
    {
        for(int j=0; j<(len-i)-1;j++)
        {
            if(ary[j]>ary[j+1])
            {
                temp=ary[j];
                ary[j]=ary[j+1];
                ary[j+1]=temp;
            }
        }
    }
}

특정 패턴의 1차원 배열 만들기
#include<stdio.h>
void Pattern(int arr[], int len);
int main(void)
{
    int n = 0;
    printf("정수 입력: ");
    scanf("%d",&n);
    int arr[n];

    Pattern(arr, sizeof(arr) / sizeof(int));
    for (int i=0;i<n;i++)
    {
        printf("%d ", arr[i]);
    }
    return 0;
}
void Pattern(int arr[], int len)
{
    int m = len/2;
    int k = (len-1)/2;
    int j = len;
    int a = 1;
    if(len%2 == 1)
    {
        for(int i=k; i>=0;i--)
        {
            arr[i] = a;
            a++;
        }
        a = 1;
        for(int i=k; i<j;i++)
        {
            arr[i] = a;
            a++;
        }
    }
    if(len%2 == 0)
    {
        for(int i=m-1; i>=0;i--)
        {
            arr[i] = a;
            a++;
        }
        a = 1;
        for(int i=m; i<j;i++)
        {
            arr[i] = a;
            a++;
        }
    }
}


